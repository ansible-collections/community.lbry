---
  - name: Create a test file to upload to lbry
    copy:
      content: |
        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse eget odio nec ipsum aliquet fermentum sit amet in nulla. Fusce quis turpis eu lectus porta posuere. Mauris imperdiet augue lobortis facilisis euismod. Maecenas dapibus ultricies lacus eget fringilla. In in molestie tortor. Maecenas pulvinar ipsum iaculis, tincidunt magna eget, pellentesque diam. Phasellus cursus feugiat justo et vehicula. Nam velit ex, fermentum a accumsan sed, porttitor non dolor. Aenean luctus euismod odio sit amet fermentum. Aenean quis ex leo. Nam enim lacus, tempus in orci at, semper porttitor lacus. Sed vel porttitor lorem.
      dest: /tmp/lorum_ipsum.txt

  - name: Copy file to the lbry docker container
    command: docker cp /tmp/lorum_ipsum.txt lbrynet:/tmp/lorum_ipsum.txt

  - name: Upload file to lbry - Missing bid
    community.lbry.lbry_publish:
      name: lorem-ipsum
      file_path: /tmp/lorum_ipsum.txt
      title: Lorem Ipsum Dolor Sit Amet
      author: rhysmeister
    register: result
    ignore_errors: yes

  - assert:
      that:
        - "result.failed"
        - "result.changed == False"
        - "'is a required argument for new publishes.' in result.msg"

  - name: Upload file to lbry - add huge bid
    community.lbry.lbry_publish:
      name: lorem-ipsum
      file_path: /tmp/lorum_ipsum.txt
      title: Lorem Ipsum Dolor Sit Amet
      author: rhysmeister
      bid: '9999.0'
    register: result
    ignore_errors: yes

  - assert:
      that:
        - "result.failed"
        - "result.changed == False"
        - "result.msg == 'Not enough funds to cover this transaction.'"

  - name: Upload file to lbry - reasonable in funds bid
    community.lbry.lbry_publish:
      name: lorem-ipsum
      file_path: /tmp/lorum_ipsum.txt
      title: Lorem Ipsum Dolor Sit Amet
      author: rhysmeister
      bid: '1.25'
    register: result

  - assert:
      that:
        - "result.changed"
        - "result.result.outputs.0.value.author == 'rhysmeister'"
        - "result.result.outputs.0.value.stream_type == 'document'"
        - "result.result.outputs.0.value.title == 'Lorem Ipsum Dolor Sit Amet'"
        - "result.result.outputs.0.value.source.media_type == 'text/plain'"
        - "result.result.outputs.0.claim_op == 'create'"

  - name: Copy the image file to the lbry docker container
    command: docker cp files/dog.jpg lbrynet:/tmp/dog.jpg
    args:
      chdir: "{{ role_path }}"

  - name: Upload an image to lbry
    community.lbry.lbry_publish:
      name: test-image
      file_path: /tmp/dog.jpg
      title: Image of a dog
      author: rhysmeister
      bid: '1.50'
      tags:
        - dog
        - animal
        - puppy
    register: result

  - assert:
      that:
        - "result.changed"
        - "result.result.outputs.0.value.author == 'rhysmeister'"
        - "result.result.outputs.0.value.stream_type == 'image'"
        - "result.result.outputs.0.value.title == 'Image of a dog'"
        - "result.result.outputs.0.value.source.media_type == 'image/jpeg'"
        - "result.result.outputs.0.claim_op == 'create'"

  - name: Download a video to upload
    command: wget --quiet {{ video_url }} -O files/video_upload.mp4
    args:
      chdir: "{{ role_path }}"

  - name: Copy the video file to the lbry docker container
    command: docker cp files/video_upload.mp4 lbrynet:/tmp/video_upload.mp4
    args:
      chdir: "{{ role_path }}"

  - name: Upload the video to lbry - ffmpeg not installed
    community.lbry.lbry_publish:
      name: test-video
      file_path: /tmp/video_upload.mp4
      title: Video Upload
      author: rhysmeister
      bid: '3.25'
      tags:
        - video
      optimize_file: yes
    register: result
    ignore_errors: yes

  - debug:
      var: result

  - assert:
      that:
        - "result.failed"
        - "'Unable to locate ffmpeg executable' in result.msg"

  - name: Install ffmpeg inside the docker container
    shell: docker exec --user root lbrynet /bin/bash -c "apt update -y && apt install ffmpeg -y"

  - name: Upload the video to lbry
    community.lbry.lbry_publish:
      name: test-video
      file_path: /tmp/video_upload.mp4
      title: Video Upload
      author: rhysmeister
      bid: '3.25'
      tags:
        - video
      optimize_file: yes
    register: result

  - assert:
      that:
        - "result.changed"
        - "result.result.outputs.0.value.author == 'rhysmeister'"
        - "result.result.outputs.0.value.stream_type == 'video'"
        - "result.result.outputs.0.value.title == 'Video Upload'"
        - "result.result.outputs.0.value.video.duration == 56"
        - "result.result.outputs.0.value.source.media_type == 'video/mp4'"
        - "result.result.outputs.0.claim_op == 'create'"

  - name: Copy the markdown.md file to the lbry docker container
    command: docker cp files/markdown.md lbrynet:/tmp/markdown.md
    args:
      chdir: "{{ role_path }}"

  - name: Upload the markdown.md post to lbry
    community.lbry.lbry_publish:
      name: markdown-post
      file_path: /tmp/markdown.md
      title: "My Markdown Blog Post"
      author: rhysmeister
      bid: '2.0'
      tags:
        - markdown
        - blog
    register: result

  - debug:
      var: result

  - assert:
      that:
        - "result.changed"
        - "result.result.outputs.0.value.author == 'rhysmeister'"
        - "result.result.outputs.0.value.stream_type == 'document'"
        - "result.result.outputs.0.value.title == 'My Markdown Blog Post'"
        - "result.result.outputs.0.value.source.media_type == 'text/markdown'"
        - "result.result.outputs.0.claim_op == 'create'"
  
  - name: Upload the markdown.md post to lbry - Run again!
    community.lbry.lbry_publish:
      name: markdown-post
      file_path: /tmp/markdown.md
      title: "My Markdown Blog Post"
      author: rhysmeister
      bid: '2.0'
      tags:
        - markdown
        - blog
    register: result

  - debug:
      var: result

  - assert:
      that:
        - "result.changed"
        - "result.result.outputs.0.value.author == 'rhysmeister'"
        - "result.result.outputs.0.value.stream_type == 'document'"
        - "result.result.outputs.0.value.title == 'My Markdown Blog Post'"
        - "result.result.outputs.0.value.source.media_type == 'text/markdown'"
        - "result.result.outputs.0.claim_op == 'update'"